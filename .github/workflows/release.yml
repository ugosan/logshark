name: binary-release

on:
  push:
    tags:
    - 'v*'

jobs:
  release_logshark:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate build files
        uses: thatisuday/go-cross-build@v1
        with:
            platforms: 'linux/amd64, darwin/amd64, windows/amd64'
            package: 'cmd'
            name: 'logshark'
            compress: 'false'
            dest: 'dist'

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: gzip mac
        run: tar -cvzf logshark-darwin-amd64.tar.gz ./dist/logshark-darwin-amd64

      - name: Upload Release Asset Mac
        id: upload-release-asset-mac
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: logshark-darwin-amd64.tar.gz
          asset_name: logshark-darwin-amd64.tar.gz
          asset_content_type: application/gzip
      
      - name: gzip linux
        run: tar -cvzf logshark-linux-amd64.tar.gz ./dist/logshark-linux-amd64
      - 
        name: Upload Release Asset Linux
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: logshark-linux-amd64.tar.gz
          asset_name: logshark-linux-amd64.tar.gz
          asset_content_type: application/gzip
      
      - name: gzip win
        run: tar -cvzf logshark-windows-amd64.tar.gz ./dist/logshark-windows-amd64.exe

      - 
        name: Upload Release Asset Windows
        id: upload-release-asset-win
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: logshark-windows-amd64.tar.gz
          asset_name: logshark-windows-amd64.tar.gz
          asset_content_type: application/gzip

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ugosan/logshark

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}